#include <stdio.h>


void addArrays(int result[], int arr1[], int arr2[], int size) {
    for (int i = 0; i < size; i++) {
        result[i] = arr1[i] + arr2[i];
    }
}


void multiplyArrays(int result[], int arr1[], int arr2[], int size) {
    for (int i = 0; i < size; i++) {
        result[i] = arr1[i] * arr2[i];
    }
}


void subtractArrays(int result[], int arr1[], int arr2[], int size) {
    for (int i = 0; i < size; i++) {
        result[i] = arr1[i] - arr2[i];
    }
}


void displayArray(int arr[], int size) {
    printf("Array: ");
    for (int i = 0; i < size; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");
}

int main() {
    int size;
    printf("Enter the size of the arrays: ");
    scanf("%d", &size);

    int arr1[size], arr2[size], result[size];
    
    printf("Enter the elements of the first array:\n");
    for (int i = 0; i < size; i++) {
        scanf("%d", &arr1[i]);
    }

    printf("Enter the elements of the second array:\n");
    for (int i = 0; i < size; i++) {
        scanf("%d", &arr2[i]);
    }

    int choice;
    do {
        printf("\n1. Add arrays\n");
        printf("2. Multiply arrays\n");
        printf("3. Subtract arrays\n");
        printf("4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                addArrays(result, arr1, arr2, size);
                printf("Result of addition:\n");
                displayArray(result, size);
                break;
            case 2:
                multiplyArrays(result, arr1, arr2, size);
                printf("Result of multiplication:\n");
                displayArray(result, size);
                break;
            case 3:
                subtractArrays(result, arr1, arr2, size);
                printf("Result of subtraction:\n");
                displayArray(result, size);
                break;
            case 4:
                printf("Exiting the program.\n");
                break;
            default:
                printf("Invalid choice.\n");
        }
    } while (choice != 4);

    return 0;
}
